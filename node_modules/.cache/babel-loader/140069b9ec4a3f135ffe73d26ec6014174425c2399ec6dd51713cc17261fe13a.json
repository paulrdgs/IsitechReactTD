{"ast":null,"code":"var _jsxFileName = \"C:\\\\Cours\\\\Rapport\\\\Janvier\\\\Code\\\\my-app\\\\src\\\\App.js\";\nimport './css/App.css';\nimport { useState } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  let tabnombre = [1, 2, 9, 4, 5, 8, 7, 8, 9, 10];\n  let tabmot = ['test', 'ane', 'schtroummf', 'apéro', 'javascript'];\n  let chaine = \"bn,b,;v;sbs:b,ndbccxcv,nb,v,b;s\";\n  let caractere = \";\";\n  let tableaudetableau = [1, 2, [4, 8], [78, 65], [[1, 3], 5]];\n  let x = 1;\n  let y = 2;\n  const findLargestNumber = tabnombre => {\n    alert(Math.max(...tabnombre));\n  };\n  const sortWords = tabmot => {\n    alert(tabmot.sort());\n  };\n  const countOccurence = (chaine, caractere) => {\n    let count = 0;\n    for (const string of chaine) {\n      if (string.includes(caractere)) {\n        count++;\n      }\n    }\n    alert(count);\n  };\n  const flattenArray = tableaudetableau => {\n    tableaudetableau.forEach(detab => {\n      tableaudetableau.flat();\n    });\n    alert(tableaudetableau);\n  };\n  const removeDupes = tabnombre => {\n    const newtab = new Set(tabnombre);\n    console.log(newtab);\n  };\n  const swapvariables = (x, y) => {};\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: tabnombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => findLargestNumber(tabnombre),\n      children: \"+ grand nombre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: tabmot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => sortWords(tabmot),\n      children: \"Mot odre alphab\\xE9tique\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: chaine\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => countOccurence(chaine, caractere),\n      children: [\"caract\\xE8re \", caractere, \" dans chaine\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: tableaudetableau\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => flattenArray(tableaudetableau),\n      children: \"tableau plat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: tabnombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => removeDupes(tabnombre),\n      children: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","App","tabnombre","tabmot","chaine","caractere","tableaudetableau","x","y","findLargestNumber","alert","Math","max","sortWords","sort","countOccurence","count","string","includes","flattenArray","forEach","detab","flat","removeDupes","newtab","Set","console","log","swapvariables"],"sources":["C:/Cours/Rapport/Janvier/Code/my-app/src/App.js"],"sourcesContent":["import './css/App.css';\nimport { useState } from 'react';\n\n\nconst App = () => {\n  \n  let tabnombre  = [1, 2, 9, 4, 5, 8, 7, 8, 9, 10];\n  let tabmot  = ['test', 'ane', 'schtroummf', 'apéro', 'javascript'];\n  let chaine = \"bn,b,;v;sbs:b,ndbccxcv,nb,v,b;s\";\n  let caractere = \";\";\n  let tableaudetableau = [1, 2, [4, 8], [78, 65], [[1, 3], 5]];\n  let x = 1;\n  let y = 2;\n\n\n  const findLargestNumber = (tabnombre) => {\n    alert(Math.max(...tabnombre));\n  }\n\n  const sortWords = (tabmot) => {\n    alert(tabmot.sort())\n  }\n\n  const countOccurence = (chaine, caractere) => {\n    let count = 0;\n    for(const string of chaine)\n    {\n      if(string.includes(caractere))\n      {\n        count++;\n      }\n    }\n    alert(count);\n  }\n\n  const flattenArray = (tableaudetableau) => {\n    tableaudetableau.forEach(detab => {\n      tableaudetableau.flat();\n    })\n    alert(tableaudetableau);\n  }\n\n  const removeDupes = (tabnombre) => {\n    const newtab = new Set(tabnombre);\n    console.log(newtab);\n  }\n\n  const swapvariables = (x, y) => {\n\n  }\n\n\n  return (\n    <>\n      <p>{tabnombre}</p>\n      <button onClick={() => findLargestNumber(tabnombre)}>+ grand nombre</button>\n\n      <br></br>\n      <br></br>\n\n      <p>{tabmot}</p>\n      <button onClick={() => sortWords(tabmot)}>Mot odre alphabétique</button>\n\n      <br></br>\n      <br></br>\n\n      <p>{chaine}</p>\n      <button onClick={() => countOccurence(chaine, caractere)}>caractère {caractere} dans chaine</button>\n      \n      <br></br>\n      <br></br>\n\n      <p>{tableaudetableau}</p>\n      <button onClick={() => flattenArray(tableaudetableau)}>tableau plat</button>\n\n      <br></br>\n      <br></br>\n\n      <p>{tabnombre}</p>\n      <button onClick={() => removeDupes(tabnombre)}>test</button>\n    </>\n  )\n\n\n}\n\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}