{"ast":null,"code":"var _jsxFileName = \"C:\\\\Cours\\\\Rapport\\\\Janvier\\\\Code\\\\my-app\\\\src\\\\App.js\";\nimport './css/App.css';\nimport { useState } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  let tabnombre = [1, 2, 9, 4, 5, 8, 7, 8, 9, 10];\n  let tabmot = ['test', 'ane', 'schtroummf', 'apéro', 'javascript'];\n  let chaine = \"bn,b,;v;sbs:b,ndbccxcv,nb,v,b;s\";\n  let caractere = \";\";\n  let tableaudetableau = [1, 2, [4, 8], [78, 65], [[1, 3], 5]];\n  const first = 1;\n  const seconde = 2;\n  const val = {\n    text: \"coucou\",\n    value: 4,\n    essaie: \"oui\"\n  };\n  const findLargestNumber = tabnombre => {\n    alert(Math.max(...tabnombre));\n  };\n  const sortWords = tabmot => {\n    alert(tabmot.sort());\n  };\n  const countOccurence = (chaine, caractere) => {\n    let count = 0;\n    for (const string of chaine) {\n      if (string.includes(caractere)) {\n        count++;\n      }\n    }\n    alert(count);\n  };\n  const flattenArray = tableaudetableau => {\n    tableaudetableau.forEach(detab => {\n      tableaudetableau.flat();\n    });\n    alert(tableaudetableau);\n  };\n  const removeDupes = tabnombre => {\n    const newtab = new Set(tabnombre);\n    console.log(newtab);\n  };\n  const swapvariables = (first, seconde) => {\n    [first, seconde] = [seconde, first];\n    alert(\"x=\" + first + \"y=\" + seconde);\n  };\n  const sumArray = tabnombre => {\n    let accumulator = 0;\n    for (const value of tabnombre) {\n      accumulator += value;\n    }\n    alert(accumulator);\n  };\n  const parseObj = val => {\n    console.log(...Object.values(val));\n  };\n  const getUsers = () => {\n    fetch(\"http://localhost:5017/api/Utilisateur/All%20user\", {\n      type: \"GET\"\n    }).then(res => console.log(res));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: tabnombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => findLargestNumber(tabnombre),\n      children: \"+ grand nombre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: tabmot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => sortWords(tabmot),\n      children: \"Mot odre alphab\\xE9tique\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: chaine\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => countOccurence(chaine, caractere),\n      children: [\"caract\\xE8re \", caractere, \" dans chaine\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: tableaudetableau\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => flattenArray(tableaudetableau),\n      children: \"tableau plat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: tabnombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => removeDupes(tabnombre),\n      children: \"virer les doublons\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"x=\", first, \", y=\", seconde]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => swapvariables(first, seconde),\n      children: \"inverser les valeurs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: tabnombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => sumArray(tabnombre),\n      children: \"ajouter valeur tableau\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"text:\", val.text, \", value:\", val.value, \", essaie:\", val.essaie]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => parseObj(val),\n      children: \"recup valeur prop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"API\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getUsers,\n      children: \"API test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","App","tabnombre","tabmot","chaine","caractere","tableaudetableau","first","seconde","val","text","value","essaie","findLargestNumber","alert","Math","max","sortWords","sort","countOccurence","count","string","includes","flattenArray","forEach","detab","flat","removeDupes","newtab","Set","console","log","swapvariables","sumArray","accumulator","parseObj","Object","values","getUsers","fetch","type","then","res"],"sources":["C:/Cours/Rapport/Janvier/Code/my-app/src/App.js"],"sourcesContent":["import './css/App.css';\nimport { useState } from 'react';\n\n\nconst App = () => {\n\n  let tabnombre  = [1, 2, 9, 4, 5, 8, 7, 8, 9, 10];\n  let tabmot  = ['test', 'ane', 'schtroummf', 'apéro', 'javascript'];\n  let chaine = \"bn,b,;v;sbs:b,ndbccxcv,nb,v,b;s\";\n  let caractere = \";\";\n  let tableaudetableau = [1, 2, [4, 8], [78, 65], [[1, 3], 5]];\n  const first = 1;\n  const seconde = 2;\n  const val = {\n    text: \"coucou\",\n    value: 4,\n    essaie: \"oui\",\n  }\n\n\n  const findLargestNumber = (tabnombre) => {\n    alert(Math.max(...tabnombre));\n  }\n\n  const sortWords = (tabmot) => {\n    alert(tabmot.sort())\n  }\n\n  const countOccurence = (chaine, caractere) => {\n    let count = 0;\n    for(const string of chaine)\n    {\n      if(string.includes(caractere))\n      {\n        count++;\n      }\n    }\n    alert(count);\n  }\n\n  const flattenArray = (tableaudetableau) => {\n    tableaudetableau.forEach(detab => {\n      tableaudetableau.flat();\n    })\n    alert(tableaudetableau);\n  }\n\n  const removeDupes = (tabnombre) => {\n    const newtab = new Set(tabnombre);\n    console.log(newtab);\n  }\n\n  const swapvariables = (first, seconde) => {\n    [first, seconde] = [seconde, first];\n    alert(\"x=\"+first+\"y=\"+seconde);\n  }\n\n  const sumArray = (tabnombre) => {\n    let accumulator = 0;\n    for (const value of tabnombre)\n    {\n      accumulator += value;\n    }\n    alert(accumulator);\n  }\n\n  const parseObj = (val) => {\n    console.log(...Object.values(val))\n  }\n\n  const getUsers = () => {\n    fetch(\"http://localhost:5017/api/Utilisateur/All%20user\", {\n      type: \"GET\",\n    }).then((res) => console.log(res));\n  };\n\n\n  return (\n    <>\n      <p>{tabnombre}</p>\n      <button onClick={() => findLargestNumber(tabnombre)}>+ grand nombre</button>\n\n      <br></br>\n      <br></br>\n\n      <p>{tabmot}</p>\n      <button onClick={() => sortWords(tabmot)}>Mot odre alphabétique</button>\n\n      <br></br>\n      <br></br>\n\n      <p>{chaine}</p>\n      <button onClick={() => countOccurence(chaine, caractere)}>caractère {caractere} dans chaine</button>\n      \n      <br></br>\n      <br></br>\n\n      <p>{tableaudetableau}</p>\n      <button onClick={() => flattenArray(tableaudetableau)}>tableau plat</button>\n\n      <br></br>\n      <br></br>\n\n      <p>{tabnombre}</p>\n      <button onClick={() => removeDupes(tabnombre)}>virer les doublons</button>\n\n      <br></br>\n      <br></br>\n\n      <p>x={first}, y={seconde}</p>\n      <button onClick={() => swapvariables(first, seconde)}>inverser les valeurs</button>\n\n      <br></br>\n      <br></br>\n\n      <p>{tabnombre}</p>\n      <button onClick={() => sumArray(tabnombre)}>ajouter valeur tableau</button>\n\n      <br></br>\n      <br></br>\n\n      <p>text:{val.text}, value:{val.value}, essaie:{val.essaie}</p>\n      <button onClick={() => parseObj(val)}>recup valeur prop</button>\n\n      <br></br>\n      <br></br>\n\n      <p>API</p>\n      <button onClick={getUsers}>API test</button>\n    </>\n  )\n\n\n}\n\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}