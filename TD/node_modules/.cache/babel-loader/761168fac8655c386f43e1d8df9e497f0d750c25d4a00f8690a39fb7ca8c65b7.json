{"ast":null,"code":"import './css/App.css';\nimport { useState } from 'react';\nconst App = () => {\n  let tabnombre = [1, 2, 9, 4, 5, 8, 7, 8, 9, 10];\n  let tabmot = ['test', 'ane', 'schtroummf', 'apéro', 'javascript'];\n  let chaine = \"bn,b,;v;sbs:b,ndbccxcv,nb,v,b;s\";\n  let caractere = \";\";\n  let tableaudetableau = [1, 2, [4, 8], [78, 65], [[1, 3], 5]];\n  const first = 1;\n  const seconde = 2;\n  const val = {\n    text: \"coucou\",\n    value: 4,\n    essaie: \"oui\"\n  };\n  const findLargestNumber = tabnombre => {\n    alert(Math.max(...tabnombre));\n  };\n  const sortWords = tabmot => {\n    alert(tabmot.sort());\n  };\n  const countOccurence = (chaine, caractere) => {\n    let count = 0;\n    for (const string of chaine) {\n      if (string.includes(caractere)) {\n        count++;\n      }\n    }\n    alert(count);\n  };\n  const flattenArray = tableaudetableau => {\n    tableaudetableau.forEach(detab => {\n      tableaudetableau.flat();\n    });\n    alert(tableaudetableau);\n  };\n  const removeDupes = tabnombre => {\n    const newtab = new Set(tabnombre);\n    console.log(newtab);\n  };\n  const swapvariables = (first, seconde) => {\n    [first, seconde] = [seconde, first];\n    alert(\"x=\" + first + \"y=\" + seconde);\n  };\n  const sumArray = tabnombre => {\n    let accumulator = 0;\n    for (const value of tabnombre) {\n      accumulator += value;\n    }\n    alert(accumulator);\n  };\n  const parseObj = val => {\n    console.log(...Object.values(val));\n  };\n  const getUsers = () => {\n    fetch(\"http://localhost:5017/api/Utilisateur/All%20user\", {\n      type: \"GET\"\n    }).then(res => console.log(res));\n  };\n\n  // return (\n  //   <>\n  //     <p>{tabnombre}</p>\n  //     <button onClick={() => findLargestNumber(tabnombre)}>+ grand nombre</button>\n\n  //     <br></br>\n  //     <br></br>\n\n  //     <p>{tabmot}</p>\n  //     <button onClick={() => sortWords(tabmot)}>Mot odre alphabétique</button>\n\n  //     <br></br>\n  //     <br></br>\n\n  //     <p>{chaine}</p>\n  //     <button onClick={() => countOccurence(chaine, caractere)}>caractère {caractere} dans chaine</button>\n\n  //     <br></br>\n  //     <br></br>\n\n  //     <p>{tableaudetableau}</p>\n  //     <button onClick={() => flattenArray(tableaudetableau)}>tableau plat</button>\n\n  //     <br></br>\n  //     <br></br>\n\n  //     <p>{tabnombre}</p>\n  //     <button onClick={() => removeDupes(tabnombre)}>virer les doublons</button>\n\n  //     <br></br>\n  //     <br></br>\n\n  //     <p>x={first}, y={seconde}</p>\n  //     <button onClick={() => swapvariables(first, seconde)}>inverser les valeurs</button>\n\n  //     <br></br>\n  //     <br></br>\n\n  //     <p>{tabnombre}</p>\n  //     <button onClick={() => sumArray(tabnombre)}>ajouter valeur tableau</button>\n\n  //     <br></br>\n  //     <br></br>\n\n  //     <p>text:{val.text}, value:{val.value}, essaie:{val.essaie}</p>\n  //     <button onClick={() => parseObj(val)}>recup valeur prop</button>\n\n  //     <br></br>\n  //     <br></br>\n  //   </>\n  // )\n\n  return {\n    getUsers\n  };\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","App","tabnombre","tabmot","chaine","caractere","tableaudetableau","first","seconde","val","text","value","essaie","findLargestNumber","alert","Math","max","sortWords","sort","countOccurence","count","string","includes","flattenArray","forEach","detab","flat","removeDupes","newtab","Set","console","log","swapvariables","sumArray","accumulator","parseObj","Object","values","getUsers","fetch","type","then","res"],"sources":["C:/Cours/Rapport/Janvier/Code/my-app/src/App.js"],"sourcesContent":["import './css/App.css';\nimport { useState } from 'react';\n\n\nconst App = () => {\n\n  let tabnombre  = [1, 2, 9, 4, 5, 8, 7, 8, 9, 10];\n  let tabmot  = ['test', 'ane', 'schtroummf', 'apéro', 'javascript'];\n  let chaine = \"bn,b,;v;sbs:b,ndbccxcv,nb,v,b;s\";\n  let caractere = \";\";\n  let tableaudetableau = [1, 2, [4, 8], [78, 65], [[1, 3], 5]];\n  const first = 1;\n  const seconde = 2;\n  const val = {\n    text: \"coucou\",\n    value: 4,\n    essaie: \"oui\",\n  }\n\n\n  const findLargestNumber = (tabnombre) => {\n    alert(Math.max(...tabnombre));\n  }\n\n  const sortWords = (tabmot) => {\n    alert(tabmot.sort())\n  }\n\n  const countOccurence = (chaine, caractere) => {\n    let count = 0;\n    for(const string of chaine)\n    {\n      if(string.includes(caractere))\n      {\n        count++;\n      }\n    }\n    alert(count);\n  }\n\n  const flattenArray = (tableaudetableau) => {\n    tableaudetableau.forEach(detab => {\n      tableaudetableau.flat();\n    })\n    alert(tableaudetableau);\n  }\n\n  const removeDupes = (tabnombre) => {\n    const newtab = new Set(tabnombre);\n    console.log(newtab);\n  }\n\n  const swapvariables = (first, seconde) => {\n    [first, seconde] = [seconde, first];\n    alert(\"x=\"+first+\"y=\"+seconde);\n  }\n\n  const sumArray = (tabnombre) => {\n    let accumulator = 0;\n    for (const value of tabnombre)\n    {\n      accumulator += value;\n    }\n    alert(accumulator);\n  }\n\n  const parseObj = (val) => {\n    console.log(...Object.values(val))\n  }\n\n  const getUsers = () => {\n    fetch(\"http://localhost:5017/api/Utilisateur/All%20user\", {\n      type: \"GET\",\n    }).then((res) => console.log(res));\n  };\n\n\n  // return (\n  //   <>\n  //     <p>{tabnombre}</p>\n  //     <button onClick={() => findLargestNumber(tabnombre)}>+ grand nombre</button>\n\n  //     <br></br>\n  //     <br></br>\n\n  //     <p>{tabmot}</p>\n  //     <button onClick={() => sortWords(tabmot)}>Mot odre alphabétique</button>\n\n  //     <br></br>\n  //     <br></br>\n\n  //     <p>{chaine}</p>\n  //     <button onClick={() => countOccurence(chaine, caractere)}>caractère {caractere} dans chaine</button>\n      \n  //     <br></br>\n  //     <br></br>\n\n  //     <p>{tableaudetableau}</p>\n  //     <button onClick={() => flattenArray(tableaudetableau)}>tableau plat</button>\n\n  //     <br></br>\n  //     <br></br>\n\n  //     <p>{tabnombre}</p>\n  //     <button onClick={() => removeDupes(tabnombre)}>virer les doublons</button>\n\n  //     <br></br>\n  //     <br></br>\n\n  //     <p>x={first}, y={seconde}</p>\n  //     <button onClick={() => swapvariables(first, seconde)}>inverser les valeurs</button>\n\n  //     <br></br>\n  //     <br></br>\n\n  //     <p>{tabnombre}</p>\n  //     <button onClick={() => sumArray(tabnombre)}>ajouter valeur tableau</button>\n\n  //     <br></br>\n  //     <br></br>\n\n  //     <p>text:{val.text}, value:{val.value}, essaie:{val.essaie}</p>\n  //     <button onClick={() => parseObj(val)}>recup valeur prop</button>\n\n  //     <br></br>\n  //     <br></br>\n  //   </>\n  // )\n\n    return {\n      getUsers,\n    };\n\n}\n\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}